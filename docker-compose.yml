version: "3.8"

volumes:
  n8n_storage:
  evolution_instances:
  evolution_redis:
  postgres_data:
  qdrant_storage:
  ollama_storage:

networks:
  evo_n8n_net:
    name: evo_n8n_net
    driver: bridge

# --- Definiciones extendidas para ollama y su pull ---
x-ollama: &service-ollama
  image: ollama/ollama:latest
  networks: ["evo_n8n_net"]
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: ["evo_n8n_net"]
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  command:
    - "-c"
    - "sleep 3; OLLAMA_HOST=ollama:11434 ollama pull llama3.1; OLLAMA_HOST=ollama:11434 ollama pull nomic-embed-text"

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks: ["evo_n8n_net"]
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}",
        ]
      interval: 5s
      timeout: 5s
      retries: 10

  evolution_api:
    image: atendai/evolution-api:homolog
    container_name: evolution_api
    restart: always
    depends_on:
      - redis
      - postgres
    ports:
      - 8080:8080
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evo_n8n_net
    env_file:
      - .env
    expose:
      - 8080

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    command: redis-server --port 6379 --appendonly yes
    volumes:
      - evolution_redis:/data
    networks:
      - evo_n8n_net
    ports:
      - 6379:6379

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks: ["evo_n8n_net"]
    ports:
      - 5678:5678
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - DB_POSTGRESDB_DATABASE=n8n
      - N8N_DIAGNOSTICS_ENABLED=false
      - N8N_PERSONALIZATION_ENABLED=false
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - N8N_USER_MANAGEMENT_JWT_SECRET=${N8N_USER_MANAGEMENT_JWT_SECRET}
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/backup:/backup
      - ./shared:/data/shared

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    restart: unless-stopped
    networks: ["evo_n8n_net"]
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama
    container_name: ollama-cpu

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    container_name: ollama-gpu
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  ollama-pull-llama-cpu:
    profiles: ["cpu"]
    <<: *init-ollama
    container_name: ollama-pull-llama-cpu
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *init-ollama
    container_name: ollama-pull-llama-gpu
    depends_on:
      - ollama-gpu
